{"version":3,"sources":["Item.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Item","props","item","StyledContainer","styled","div","isDragging","draggableId","index","provided","snapshot","id","ref","innerRef","draggableProps","dragHandleProps","console","log","Task","toDo","droppableId","droppableProps","style","margin","items","list","map","placeholder","title","onDragEnd","result","destination","sourceIdx","parseInt","source","destIdx","draggedLink","newList","slice","splice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2bAoCeA,MAjCf,SAAcC,GAAQ,IACXC,EAAQD,EAARC,KACDC,EAAkBC,IAAOC,IAAV,KAGC,SAAAJ,GAAK,OACRA,EAAMK,WAAa,UAAY,WACtC,SAAAL,GAAK,OACHA,EAAMK,WAAa,QAAU,cAC/B,SAAAL,GAAK,OACJA,EAAMK,WAAa,gCACd,mCACF,SAAAL,GAAK,OACVA,EAAMK,WAAa,qCACZ,sCAGpB,OACE,cAAC,IAAD,CAAWC,YAAW,UAAKN,EAAMO,OAASA,MAAOP,EAAMO,MAAvD,SACG,SAACC,EAAUC,GAAX,OACC,eAACP,EAAD,qCACEQ,GAAK,cACLC,IAAOH,EAASI,SAChBP,WAAcI,EAASJ,YACnBG,EAASK,gBACTL,EAASM,iBALf,cAMSb,EACAc,QAAQC,IAAR,UAAef,Y,0pBCajBgB,MAtCf,SAAcjB,GAAQ,IACZkB,EAASlB,EAATkB,KACFhB,EAAkBC,IAAOC,IAAV,KAwBrB,OACE,cAAC,IAAD,CAAWe,YAAaD,EAAKR,GAA7B,SACG,SAACF,GAAD,OACC,eAACN,EAAD,yBAAiBS,IAAKH,EAASI,UAAcJ,EAASY,gBAAtD,cACE,oBAAIC,MAAO,CAAEC,OAAQ,QAArB,SAAgCJ,EAAI,SAPzBK,EAQEL,EAAKM,KAPjBD,EAAME,KAAI,SAACxB,EAAMM,GAAP,OAAiB,cAAC,EAAD,CAAMA,MAAOA,EAAON,KAAMA,QAQrDO,EAASkB,gBATA,IAACH,MCzBjBL,EAAO,CACT,CACER,GAAI,OACJiB,MAAO,4BACPH,KAAM,CACJ,4BACA,0BACA,6DACA,sBACA,mCAKFI,EAAY,SAACC,GACf,GAAKA,EAAOC,YAAZ,CAGA,IAAIC,EAAYC,SAASH,EAAOI,OAAO1B,OACnC2B,EAAUF,SAASH,EAAOC,YAAYvB,OACtC4B,EAAcjB,EAAK,GAAGM,KAAKO,GAC3BK,EAAUlB,EAAK,GAAGM,KAAKa,QAC3BD,EAAQE,OAAOP,EAAW,GAC1BK,EAAQE,OAAOJ,EAAS,EAAGC,GAC3BjB,EAAK,GAAGM,KAAOY,IAUFG,MAPf,WACE,OACE,cAAC,IAAD,CAAiBX,UAAWA,EAA5B,SACE,cAAC,EAAD,CAAMV,KAAMA,EAAK,QCrBRsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bef65c3d.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\nimport {Draggable} from 'react-beautiful-dnd';\nfunction Item(props) {\n    const {item} = props\n    const StyledContainer = styled.div`\n      margin: 20px;\n      height: 25px;\n      background-color: ${props => \n                      (props.isDragging ? '#ADD8E6' : 'white')};\n      cursor: ${props => \n                 (props.isDragging ? 'grab;' : 'pointer;')}\n      border: ${props => \n                (props.isDragging ? '1px solid rgba(0, 0, 0, 0.6);'\n                    : '1px solid rgba(0, 0, 0, 0.3);')}\n      box-shadow: ${props => \n              (props.isDragging ? '0px 10px 20px rgba(0, 0, 0, 0.19);'\n                    : '0px 2px 3px rgba(0, 0, 0, 0.13);')}\n      border-radius: 1px;\n    `;\n  return (\n    <Draggable draggableId={`${props.index}`} index={props.index}>\n      {(provided, snapshot) => (\n        <StyledContainer\n          id = 'styled-cont'\n          ref = {provided.innerRef}\n          isDragging = {snapshot.isDragging}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}>\n                {item}\n                {console.log(`${item}`)}\n         </StyledContainer>\n       )}\n    </Draggable>\n  );\n}\nexport default Item;","// import React from \"react\";\nimport Item from \"./Item\";\nimport styled from \"styled-components\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nfunction Task(props) {\n  const { toDo } = props;\n  const StyledContainer = styled.div`\n    background-color: darkred;\n    padding: 15px;\n    width: 25%;\n    margin: auto;\n    border-radius: 5%;\n    @media screen and (max-width: 1040px), print and (orientation: portrait) {\n        width: 50%;\n    }\n    @media screen and (max-width: 520px), print and (orientation: portrait) {\n        width: 75%;\n    }\n    @media screen and (max-width: 360px), print and (orientation: portrait) {\n        width: 80%;\n        font-size: 12px;\n    }\n    @media screen and (max-width: 270px), print and (orientation: portrait) {\n        width: 80%;\n        font-size: 10px;\n    }\n  `;\n  let taskHendler = (items) => {\n    return items.map((item, index) => <Item index={index} item={item}></Item>);\n  };\n  return (\n    <Droppable droppableId={toDo.id}>\n      {(provided) => (\n        <StyledContainer ref={provided.innerRef} {...provided.droppableProps}>\n          <h2 style={{ margin: \"20px\" }}>{toDo[\"title\"]}</h2>\n          {taskHendler(toDo.list)}\n          {provided.placeholder}\n        </StyledContainer>\n      )}\n    </Droppable>\n  );\n}\nexport default Task;\n","import React from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Task from \"./Todo\";\nlet toDo = [\n  {\n    id: \"1234\",\n    title: \"Yapılacaklar Listesi\",\n    list: [\n      \"Müşteri aranacak.\",\n      \"Login Page bitirilecek.\",\n      \"Proje toplantısına katılılınacak.\",\n      \"Proje tamamlanacak.\",\n      \"Yeni projeye başlanacak.\",\n    ],\n  },\n];\n\nlet onDragEnd = (result) => {\n  if (!result.destination) {\n    return;\n  }\n  let sourceIdx = parseInt(result.source.index);\n  let destIdx = parseInt(result.destination.index);\n  let draggedLink = toDo[0].list[sourceIdx];\n  let newList = toDo[0].list.slice();\n  newList.splice(sourceIdx, 1);\n  newList.splice(destIdx, 0, draggedLink);\n  toDo[0].list = newList;\n};\n\nfunction App() {\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Task toDo={toDo[0]} />\n    </DragDropContext>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}